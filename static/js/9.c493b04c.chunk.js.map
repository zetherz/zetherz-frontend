{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","hooks/useAllowance.ts","utils/getTimePeriods.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","useLotteryAllowance","setAllowance","lotteryContract","useLottery","useCake","fetchAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","primary","isOpen","IfoCardDescription","defaultIsOpen","description","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","style","display","times","toFixed","margin","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","radii","default","LabelButton","value","label","buttonLabel","disabled","fontSize","color","StyledSpacer","props","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onChange","onSelectMax","Input","endAdornment","placeholder","toLocaleString","ContributeModal","currency","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","getFullDisplayBalance","title","e","currentTarget","toString","justifyContent","fullWidth","mr","deposit","pow","send","from","IfoCardContribute","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","amount","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","onApprove","useIfoApprove","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","harvest","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","useBlock","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/9.c493b04c.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(1064, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(388, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWallet()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isLoading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(1060, 'Buy CAKE')}\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(1062, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with ZetherzSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}