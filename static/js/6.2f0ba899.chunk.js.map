{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","pancakeRabbitsContract","getPancakeRabbitContract","initialState","isLoading","nfts","reducer","state","action","type","data","useGetWalletNfts","useReducer","dispatch","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","TranslateString","useI18n","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","isInitialized","currentStep","teamId","userName","minimumCakeRequired","multipliedBy","pow","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","map","WalletNotConnected","UnlockButton","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","useHasCakeBalance","minimumBalance","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","Button","UIKitButton","mediaQueries","md","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","py","onClick","undefined","useProfileCreation","starterBunnyIds","nftList","filter","nft","includes","minimumCakeBalanceToMint","Mint","setBunnyId","useCake","useBunnyFactory","hasMinimumCakeRequired","response","currentAllowance","approve","toJSON","send","from","mintNFT","images","parseInt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","claimRefundAddress","getClaimRefundAddress","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","claimRefundAbi","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","abi","useContract","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","fullWidth","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","num","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/6.2f0ba899.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          let nfts: NftMap = {}\n\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, dispatch])\n\n  return state\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport useProfileCreation from './contexts/hook'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst MIN_LENGTH = 3\nconst MAX_LENGTH = 15\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst cakeCostToRegister = 1\nconst minimumCakeToRegister = new BigNumber(cakeCostToRegister).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, ethereum } = useWallet()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const provider = ethereum as any\n      const signature = provider?.bnbSign\n        ? (await provider.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={MIN_LENGTH}\n                maxLength={MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${cakeCostToRegister} CAKE is required`)}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { Actions, State, ContextType } from './types'\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(5).multipliedBy(new BigNumber(10).pow(18)), // 5 CAKE\n  allowance: new BigNumber(25).multipliedBy(new BigNumber(10).pow(18)), // 25 CAKE\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(774, 'Total cost: 5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWallet()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n    width: auto;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\n      <Button\n        disabled={isApproveDisabled}\n        onClick={onApprove}\n        endIcon={isApproving ? spinnerIcon : undefined}\n        isLoading={isApproving}\n      >\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n      </Button>\n      <ChevronRight />\n      <ChevronBottom />\n      <Button\n        onClick={onConfirm}\n        disabled={isConfirmDisabled}\n        isLoading={isConfirming}\n        endIcon={isConfirming ? spinnerIcon : undefined}\n      >\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\n\nconst starterBunnyIds = [5, 6, 7, 8, 9]\nconst nfts = nftList.filter((nft) => starterBunnyIds.includes(nft.bunnyId))\nconst cakeCostToMint = 4\nconst minimumCakeBalanceToMint = new BigNumber(cakeCostToMint).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, 'Cost: 4 CAKE')}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${cakeCostToMint} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWallet()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/nft\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\ninterface Team {\n  name: string\n  description: string\n  isJoinable: boolean\n}\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, '1 CAKE')}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWallet()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\nimport { AbiItem } from 'web3-utils'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport { getClaimRefundAddress } from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport { useToast } from 'state/hooks'\nimport useContract from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nconst claimRefundAddress = getClaimRefundAddress()\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWallet()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getContract(claimRefundAbi, claimRefundAddress)\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst useClaimRefundContract = () => {\n  const abi = (claimRefundAbi as unknown) as AbiItem\n  return useContract(abi, claimRefundAddress)\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  height: 24px;\n  position: absolute;\n  right: 0px;\n  width: 24px;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n    height: 48px;\n    width: 48px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  height: 64px;\n  position: relative;\n  width: 64px;\n\n  & > img {\n    border-radius: 50%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n// TODO: replace with no provile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary', fullWidth: true })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <ProfileAvatar profile={profile} />\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            fullWidth\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline onClick={goToRemove}>{TranslateString(999, 'Remove Profile Pic')}</DangerOutline>\n        </>\n      ) : (\n        <Button\n          fullWidth\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useDispatch } from 'react-redux'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        fullWidth\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(999, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        fullWidth\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap-libs/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievments yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWallet()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useDispatch } from 'react-redux'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" size=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the ZetherzSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/nft\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <ProfileAvatar profile={profile} />\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWallet()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWallet()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}