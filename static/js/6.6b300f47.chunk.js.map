{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","utils/contractHelpers.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","getProfileContract","profileABI","getPancakeProfileAddress","getPancakeRabbitContract","pancakeRabbitsAbi","getPancakeRabbitsAddress","getRabbitMintingContract","rabbitMintingFarmAbi","getRabbitMintingFarmAddress","pancakeRabbitsContract","initialState","isLoading","nfts","reducer","state","action","type","data","useGetWalletNfts","useReducer","dispatch","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","TranslateString","useI18n","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","isInitialized","currentStep","teamId","userName","minimumCakeRequired","multipliedBy","pow","step","ProfileCreationContext","createContext","ProfileCreationProvider","mintingContract","hasClaimed","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","map","WalletNotConnected","UnlockButton","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","handlePreApprove","useRef","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","handleConfirm","useHasCakeBalance","minimumBalance","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","Button","UIKitButton","mediaQueries","md","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","py","onClick","undefined","useProfileCreation","starterBunnyIds","nftList","filter","nft","includes","Mint","setBunnyId","useCake","mintingFarmContract","useRabbitMintingFarm","hasMinimumCakeRequired","response","currentAllowance","approve","toJSON","send","from","mintNFT","images","parseInt","mt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","toastError","useToast","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","users","toLocaleString","ContributeModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","ConfirmProfileCreationModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","Steps","TeamSelection","ProfileCreation","Page","claimRefundAddress","getClaimRefundAddress","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","claimRefundAbi","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","abi","useContract","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","fullWidth","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","description","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","Content","Username","Heading","Status","ResponsiveText","AddressLink","PublicProfile","href","external","outline","PrizeIcon","points","Profile","PageLoader","exact","path"],"mappings":"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","file":"static/js/6.6b300f47.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { getPancakeProfileAddress, getPancakeRabbitsAddress, getRabbitMintingFarmAddress } from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport rabbitMintingFarmAbi from 'config/abi/rabbitmintingfarm.json'\n\nexport const getProfileContract = () => {\n  return getContract(profileABI, getPancakeProfileAddress())\n}\n\nexport const getPancakeRabbitContract = () => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const getRabbitMintingContract = () => {\n  return getContract(rabbitMintingFarmAbi, getRabbitMintingFarmAddress())\n}\n\nexport default null\n","import { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          let nfts: NftMap = {}\n\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, dispatch])\n\n  return state\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport useProfileCreation from './contexts/hook'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst MIN_LENGTH = 3\nconst MAX_LENGTH = 15\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeBalance = 1\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, ethereum } = useWallet()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalance)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const provider = ethereum as any\n      const signature = provider?.bnbSign\n        ? (await provider.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={MIN_LENGTH}\n                maxLength={MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${minimumCakeBalance} CAKE is required`)}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { getRabbitMintingContract } from 'utils/contractHelpers'\nimport { Actions, State, ContextType } from './types'\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(5).multipliedBy(new BigNumber(10).pow(18)), // 5 CAKE\n  allowance: new BigNumber(25).multipliedBy(new BigNumber(10).pow(18)), // 25 CAKE\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n\n  // Initial checks\n  useEffect(() => {\n    const fetchData = async () => {\n      const mintingContract = getRabbitMintingContract()\n      const hasClaimed = await mintingContract.methods.hasClaimed(account).call()\n\n      dispatch({ type: 'initialize', step: hasClaimed ? 1 : 0 })\n    }\n\n    if (account) {\n      fetchData()\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(774, 'Total cost: 5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWallet()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n    width: auto;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\n      <Button\n        disabled={isApproveDisabled}\n        onClick={onApprove}\n        endIcon={isApproving ? spinnerIcon : undefined}\n        isLoading={isApproving}\n      >\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n      </Button>\n      <ChevronRight />\n      <ChevronBottom />\n      <Button\n        onClick={onConfirm}\n        disabled={isConfirmDisabled}\n        isLoading={isConfirming}\n        endIcon={isConfirming ? spinnerIcon : undefined}\n      >\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useRabbitMintingFarm } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\n\nconst starterBunnyIds = [5, 6, 7, 8, 9]\nconst nfts = nftList.filter((nft) => starterBunnyIds.includes(nft.bunnyId))\nconst minimumCakeBalance = 4\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const mintingFarmContract = useRabbitMintingFarm()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalance)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, mintingFarmContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(mintingFarmContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return mintingFarmContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, 'Cost: 4 CAKE')}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mt=\"16px\">\n              {TranslateString(1098, `A minimum of ${minimumCakeBalance} CAKE is required`)}\n            </Text>\n          )}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWallet()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/nft\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\ninterface Team {\n  name: string\n  description: string\n  isJoinable: boolean\n}\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ account, teamId, tokenId, minimumCakeRequired, allowance, onDismiss }) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, '1 CAKE')}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWallet()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\nimport { AbiItem } from 'web3-utils'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport { getClaimRefundAddress } from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport { useToast } from 'state/hooks'\nimport useContract from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nconst claimRefundAddress = getClaimRefundAddress()\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWallet()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getContract(claimRefundAbi, claimRefundAddress)\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst useClaimRefundContract = () => {\n  const abi = (claimRefundAbi as unknown) as AbiItem\n  return useContract(abi, claimRefundAddress)\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\ninterface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  height: 24px;\n  position: absolute;\n  right: 0px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n    height: 48px;\n    width: 48px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  height: 64px;\n  margin-right: 16px;\n  position: relative;\n  width: 64px;\n\n  & > img {\n    border-radius: 50%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n// TODO: replace with no provile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary', fullWidth: true })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <ProfileAvatar profile={profile} />\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            fullWidth\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline onClick={goToRemove}>{TranslateString(999, 'Remove Profile Pic')}</DangerOutline>\n        </>\n      ) : (\n        <Button\n          fullWidth\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useDispatch } from 'react-redux'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        fullWidth\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(999, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        fullWidth\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" size=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import { Button, Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n            <Button disabled>{TranslateString(1056, 'Collect')}</Button>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n            <Button disabled>{TranslateString(1056, 'Collect')}</Button>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Heading as=\"h5\" size=\"sm\" mb=\"8px\">\n        {nft.name}\n      </Heading>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/nft\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport ComingSoon from './components/ComingSoon'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport ProfileAvatar from './components/ProfileAvatar'\n\nconst Content = styled.div`\n  flex: 1;\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst PublicProfile = () => {\n  const { account } = useWallet()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <ProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Heading as=\"h4\" size=\"md\">\n              {TranslateString(1092, 'Achievements')}\n            </Heading>\n            <ComingSoon />\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWallet()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}